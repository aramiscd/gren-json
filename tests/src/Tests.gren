module Tests exposing ( tests )

import Expect
import FileSystem
import Fuzzers as Fuzz
import Json
import Json.Parse exposing ( json )
import Test.Runner.Effectful as Test exposing ( Test, test )
import TestFile exposing ( testFile )


tests : FileSystem.Permission -> Test
tests fsPermission =
    Test.concat
        ---------------------------------------------------------------------------------------
        [ Test.fuzz Fuzz.whitespace "json empty document"
            <| \ ws -> Expect.equal ( json ws )
            <| Nothing
        ---------------------------------------------------------------------------------------
        , Test.fuzz2 Fuzz.whitespace Fuzz.whitespace "json null"
            <| \ wsl wsr -> Expect.equal ( json ( wsl ++ "null" ++ wsr ) )
            <| Just { backlog = "", values = [ Json.Null ] }
        ---------------------------------------------------------------------------------------
        , Test.fuzz2 Fuzz.whitespace Fuzz.whitespace "json false"
            <| \ wsl wsr -> Expect.equal ( json ( wsl ++ "false" ++ wsr ) )
            <| Just { backlog = "", values = [ Json.False ] }
        ---------------------------------------------------------------------------------------
        , Test.fuzz2 Fuzz.whitespace Fuzz.whitespace "json true"
            <| \ wsl wsr ->  Expect.equal ( json ( wsl ++ "true" ++ wsr ) )
            <| Just { backlog = "", values = [ Json.True ] }
        ---------------------------------------------------------------------------------------
        , Test.fuzz3 Fuzz.whitespace Fuzz.number Fuzz.whitespace "json number"
            <| \ wsl n wsr -> Expect.equal ( json ( wsl ++ n ++ wsr ) )
            <| Just { backlog = "", values = [ Json.Number n ] }
        ---------------------------------------------------------------------------------------
        , Test.fuzz3 Fuzz.whitespace Fuzz.chars Fuzz.whitespace "json string"
            <| \ wsl cs wsr -> Expect.equal ( json ( wsl ++ "\"" ++ cs ++ "\"" ++ wsr ) )
            <| Just { backlog = "", values = [ Json.String cs ] }
        ---------------------------------------------------------------------------------------
        , test "json array []"
            <| \ _ -> Expect.equal ( json "[]" )
            <| Just { backlog = "", values = [ Json.Array [] ] }
        ---------------------------------------------------------------------------------------
           , test "json array [1,2,3]"
                <| \ _ -> Expect.equal ( json "[1,2,3]" )
                <| Just
                    { backlog = ""
                    , values =
                        [ Json.Array [ Json.Number "1", Json.Number "2", Json.Number "3" ]
                        ]
                    }
        ---------------------------------------------------------------------------------------
        , test "json object {}"
            <| \ _ -> Expect.equal ( json "{}" )
            <| Just { backlog = "", values = [ Json.Object [] ] }
        ---------------------------------------------------------------------------------------
        , test "json object {\"a\":1,\"b\":2,\"c\":3}"
            <| \ _ -> Expect.equal ( json "{\"a\":1,\"b\":2,\"c\":3}" )
            <| Just
                { backlog = ""
                , values =
                    [ Json.Object
                        [ { key = Json.String "a", value = Json.Number "1" }
                        , { key = Json.String "b", value = Json.Number "2" }
                        , { key = Json.String "c", value = Json.Number "3" }
                        ]
                    ]
                }
        ---------------------------------------------------------------------------------------
        , testFile
            { expectation = TestFile.Pass
            , fsPermission = fsPermission
            , path = "json-test-data/microsoftedge.github.io/Demos/json-dummy-data/64KB.json"
            }
        ---------------------------------------------------------------------------------------
        -- todo: es gibt noch mehr zu testende json dateien
        ---------------------------------------------------------------------------------------
        ]
